@use "sass:color";
@use "sass:map";
@use "@material/theme/color-palette" as cp;
$theme-primary: cp.$cyan-500;
$theme-secondary: cp.$deep-orange-a200;
$theme-background: cp.$yellow-200;
$theme-surface: cp.$blue-grey-200;
$theme-error: #b00020;
$theme-alpha-primary: cp.$red-300;
$theme-alpha-secondary: cp.$yellow-a400;
$theme-alpha-background: cp.$pink-900;
$theme-alpha-surface: cp.$red-50;
$theme-alpha-error: $mdc-theme-error;
$theme-beta-primary: cp.$purple-500;
$theme-beta-secondary: cp.$deep-purple-a200;
$theme-beta-background: cp.$deep-purple-900;
$theme-beta-surface: cp.$purple-700;
$theme-beta-error: $mdc-theme-error;
$theme-gamma-primary: cp.$indigo-500;
$theme-gamma-secondary: cp.$blue-a200;
$theme-gamma-background: cp.$brown-900;
$theme-gamma-surface: cp.$indigo-50;
$theme-gamma-error: $mdc-theme-error;
@use "@material/theme/variables" as theme-variables with (
  $primary: $theme-primary,
  $secondary: $theme-secondary,
  $background: $theme-background,
  $surface: $theme-surface,
  $error: $theme-error
);
@use "@material/button";
@use "@material/card";
@use "@material/checkbox";
@use "@material/feature-targeting/functions" as feature-targeting-functions;
@use "@material/feature-targeting/mixins" as feature-targeting-mixins;
@use "@material/form-field/mdc-form-field";
@use "@material/icon-button";
@use "@material/ripple/mixins" as ripple-mixins;
@use "@material/theme/mixins" as theme-mixins;
@use "@material/theme/functions" as theme-functions;
@use "@material/theme/constants" as theme-constants;
@use "@material/typography/mdc-typography";

@include button.core-styles;
@include button.theme-baseline;
@include card.core-styles;
@include icon-button.core-styles;
@include checkbox.core-styles;

////////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////

@mixin common-theme-styles($property-values, $query: feature-targeting-functions.all()) {

  $feat-color: feature-targeting-functions.create-target($query, color);

  $primary: map.get($property-values, "primary");
  $secondary: map.get($property-values, "secondary");
  $surface: map.get($property-values, "surface");
  $on-primary: map.get($property-values, "on-primary");
  $on-secondary: map.get($property-values, "on-secondary");
  $on-surface: map.get($property-values, "on-surface");

  //////////////////////////
  // Buttons
  //////////////////////////

  $button-outline-color:rgba($on-surface, .12);
  $button-disabled-container-color:rgba($on-surface, .12);
  $button-disabled-ink-color:rgba($on-surface, .38);

  .mdc-button {
    @include button.container-fill-color(transparent, $query);
    @include button.ink-color($primary, $query);
    @include button.icon-color($primary, $query);
    @include button.disabled-container-fill-color(transparent, $query);
    @include button.disabled-ink-color($button-disabled-ink-color, $query);
    @include button.disabled-icon-color($button-disabled-ink-color, $query);
    @include button.ripple-states($primary, $query: $query);
    .mdc-button--raised,
    .mdc-button--unelevated {
      @include button.container-fill-color($primary, $query);
      @include button.ink-color($on-primary, $query);
      @include button.icon-color($on-primary, $query);
      @include button.disabled-container-fill-color($button-disabled-container-color, $query);
      @include button.disabled-ink-color($button-disabled-ink-color, $query);
      @include button.disabled-icon-color($button-disabled-ink-color, $query);
      @include button.ripple-states($on-primary, $query: $query);
    }
    .mdc-button--outlined {
      @include button.outline-color($button-outline-color, $query);
      @include button.disabled-outline-color($button-disabled-container-color, $query);
    }
  }

  //////////////////////////
  // Cards
  //////////////////////////

  $card-action-icon-color: rgba($on-surface, theme-variables.text-emphasis(medium)) !default;
  $card-outline-color: color.mix($on-surface, $surface, 12%) !default;

  .mdc-card {
    @include card.fill-color($surface, $query);
  }
  .mdc-card--outlined {
    @include card.outline($card-outline-color, $query: $query);
  }
  .mdc-card__action-icons {
    @include feature-targeting-mixins.targets($feat-color) {
      @include theme-mixins.prop(color, $card-action-icon-color);
    }
  }
  .mdc-card__action--icon:not(:disabled) {
    @include feature-targeting-mixins.targets($feat-color) {
      @include theme-mixins.prop(color, $card-action-icon-color);
    }
  }

  //////////////////////////
  // Checkbox
  //////////////////////////

  $checkbox-baseline-theme-color: secondary;
  $checkbox-mark-color: $on-secondary;
  $checkbox-border-color: rgba($on-surface, .54);
  $checkbox-disabled-color: rgba($on-surface, .38);

  $checkbox-ripple-target: ".mdc-checkbox__ripple";

  .mdc-checkbox {
    @include checkbox.focus-indicator-color($checkbox-baseline-theme-color, $query: $query);
    @include checkbox.container-colors(
      $unmarked-stroke-color: $checkbox-border-color,
      $unmarked-fill-color: transparent,
      $marked-stroke-color: $checkbox-baseline-theme-color,
      $marked-fill-color: $checkbox-baseline-theme-color,
      $generate-keyframes: true,
      $query: $query
    );
    @include ripple-mixins.states($color: $on-surface, $query: $query, $ripple-target: $checkbox-ripple-target);
  }
  @include checkbox.disabled-container-colors(
    $unmarked-stroke-color: $checkbox-disabled-color,
    $unmarked-fill-color: transparent,
    $marked-stroke-color: transparent,
    $marked-fill-color: $checkbox-disabled-color,
    $query: $query
  );
  @include checkbox.ink-color($checkbox-mark-color, $query: $query);
  @include checkbox.disabled-ink-color($checkbox-mark-color, $query: $query);

  //////////////////////////
  // Chips
  //////////////////////////

  $chips-fill-color-default: color.mix($on-surface, $surface, 12%);
  $chips-ink-color-default: rgba($on-surface, .87);
  $chips-icon-color: $on-surface;
  $chips-icon-opacity: .54;
  $chips-trailing-icon-hover-opacity: .62;
  $chips-trailing-icon-focus-opacity: .87;

  // SASS MIXINS ACCORDING TO README
  // fill-color-accessible($color)
  // fill-color($color)
  // ink-color($color)
  // selected-ink-color($color)
  // outline($width, $style, $color)
  // outline-color($color)
  // leading-icon-color($color, $opacity)
  // trailing-icon-color($color, $opacity, $hover-opacity, $focus-opacity)

  // @use "@material/chips/mdc-chips";
  //
  // > @use "./trailingaction/mdc-chip-trailing-action";
  // > > @use "./mixins";
  // > > @include mixins.core-styles;
  // > @use "./chip/mdc-chip";
  // > > @use "../mixins";
  // > > @include mixins.core-styles;
  // > @use "./chip-set/mdc-chip-set";
  // > > @use "../mixins";
  // > > @include mixins.set-core-styles;







};

////////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////

// Modified from @material/theme/_mixins.scss
@mixin themed-core-styles($property-values, $query: feature-targeting-functions.all()) {
  $feat-color: feature-targeting-functions.create-target($query, color);

  @include feature-targeting-mixins.targets($feat-color) {
    @each $style in map.keys($property-values) {
      --mdc-theme-#{$style}: #{map.get($property-values, $style)};
    }
  }

  @each $style in map.keys($property-values) {
    @if $style != "background" and $style != "surface" {
      .mdc-theme--#{$style} {
        @include feature-targeting-mixins.targets($feat-color) {
          @include theme-mixins.prop(color, $style, true);
        }
      }
    } @else {
      .mdc-theme--#{$style} {
        @include feature-targeting-mixins.targets($feat-color) {
          @include theme-mixins.prop(background-color, $style);
        }
      }
    }
  }

  // CSS rules for using primary and secondary (plus light/dark variants) as background colors.
  @each $style in ("primary", "secondary") {
    .mdc-theme--#{$style}-bg {
      @include feature-targeting-mixins.targets($feat-color) {
        @include theme-mixins.prop(background-color, $style, true);
      }
    }
  }
}

////////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////

@mixin make-theme($primary, $secondary, $error: #800020, $background: #fff, $surface: #fff) {
  $on-primary: if(theme-functions.contrast-tone($primary) == "dark", #000, #fff);
  $on-secondary: if(theme-functions.contrast-tone($secondary) == "dark", #000, #fff);
  $on-surface: if(theme-functions.contrast-tone($surface) == "dark", #000, #fff);
  $on-error: if(theme-functions.contrast-tone($error) == "dark", #000, #fff) !default;

  $property-values: (
    primary: $primary,
    secondary: $secondary,
    background: $background,
    surface: $surface,
    error: $error,
    on-primary: $on-primary,
    on-secondary: $on-secondary,
    on-surface: $on-surface,
    on-error: $on-error,
    text-primary-on-background: ink-color-for-fill_(primary, $background),
    text-secondary-on-background: ink-color-for-fill_(secondary, $background),
    text-hint-on-background: ink-color-for-fill_(hint, $background),
    text-disabled-on-background: ink-color-for-fill_(disabled, $background),
    text-icon-on-background: ink-color-for-fill_(icon, $background),
    text-primary-on-light: ink-color-for-fill_(primary, light),
    text-secondary-on-light: ink-color-for-fill_(secondary, light),
    text-hint-on-light: ink-color-for-fill_(hint, light),
    text-disabled-on-light: ink-color-for-fill_(disabled, light),
    text-icon-on-light: ink-color-for-fill_(icon, light),
    text-primary-on-dark: ink-color-for-fill_(primary, dark),
    text-secondary-on-dark: ink-color-for-fill_(secondary, dark),
    text-hint-on-dark: ink-color-for-fill_(hint, dark),
    text-disabled-on-dark: ink-color-for-fill_(disabled, dark),
    text-icon-on-dark: ink-color-for-fill_(icon, dark)
  );

  @include themed-core-styles($property-values);
  @include common-theme-styles($property-values);
}

////////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////

@include theme-mixins.core-styles;
@include common-theme-styles(theme-variables.$property-values);

////////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////

.theme-alpha {
  @include make-theme(
    $theme-alpha-primary,
    $theme-alpha-secondary,
    $theme-alpha-error,
    $theme-alpha-background,
    $theme-alpha-surface
  );
}

.theme-beta {
  @include make-theme(
    $theme-beta-primary,
    $theme-beta-secondary,
    $theme-beta-error,
    $theme-beta-background,
    $theme-beta-surface
  );
}

.theme-gamma {
  @include make-theme(
    $theme-gamma-primary,
    $theme-gamma-secondary,
    $theme-gamma-error,
    $theme-gamma-background,
    $theme-gamma-surface
  );
}

////////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////


